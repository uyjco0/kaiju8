version: "3.9"

services:
  kaiju8_nginx:
    image: nginx:latest
    container_name: "kaiju8_nginx"
    depends_on:
      - kaiju8_backend
      - kaiju8_db
    ports:
      - "${NGINX_HTTP_PORT}:${NGINX_HTTP_PORT}"
      - "${NGINX_HTTPS_PORT}:${NGINX_HTTPS_PORT}"
    environment:
      NGINX_HTTP_PORT: ${NGINX_HTTP_PORT}
      NGINX_HTTPS_PORT: ${NGINX_HTTPS_PORT}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx/keys/fullchain.pem:/etc/nginx/certs/fullchain.pem:ro
      - ./nginx/keys/privkey.pem:/etc/nginx/certs/privkey.pem:ro
    networks:
      - kaiju8_net
    restart: "unless-stopped"

  kaiju8_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: "kaiju8_backend"
    depends_on:
      - kaiju8_db
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      DB_HOST: "kaiju8_db"
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${POSTGRES_DB}
    networks:
      - kaiju8_net
    restart: "unless-stopped"

  kaiju8_db:
    image: postgres:latest
    container_name: "kaiju8_db"
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/initdb.sql
    networks:
      - kaiju8_net
    restart: "unless-stopped"

volumes:
  db_data:

networks:
  kaiju8_net:
    driver: bridge
